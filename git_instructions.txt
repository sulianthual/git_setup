Instructions for setting up git/github with .sh scripts
Sulian Thual 2025

New to git or just forgot the commands? This is a few shell scripts that make the job for you.
These scripts are very basic, just setup git on new computer, create new repo and push changes.

Setup:
# 1. Be on linux, all instructions through a terminal
# 2. Give execution permission to all .sh files, e.g. chmod+x git_config.sh
# 3. Start a project, copy all .sh files in its directory, then work from there
# 4. All .sh scripts use my credentials (sulianthual,sulian.thual@gmail.com...), edit them to replace with yours first

Setup credentials:
# 1. Log in/Register to github website: main email, main password (possible main phone confirmation)
# 2. Go to Profile/Settings/Developper Settings/Personal access tokens
# 3. Generate new token (classic): note as name of computer, expiration 90 days, scope "repo"
# 4. Copy token code and save in text file
# 5. Launch configuration script: ./git_config.sh (edit credentials with yours first)
# 6. Follow instructions, this will setup credentials on computer (and store them)
# 7. Tokens expire (e.g. after 90 days), when so create new token and relaunch git_config.sh

Make a new git repository:
# 1. Create empty repository on github (with NO content)
#   (DO NOT create Readme, or execute the proposed command lines, we do that here)
# 2. On computer, be in directory of new project 
# 3. Launch initial init and push with: ./git_init.sh
# 4. Follow prompts e.g. choose name (must match empty repository name on github)
# 5. This will generate .git on your computer, and push content to github too 
#    (check on github that the folder content has been pushed to the repository)
# 6. If operation fails, delete the .git folder and relaunch ./git_init.sh

Push repository changes:
# 1. Push changes in automated way (add, commit, push) with: ./git_push.sh

Pull repository:
# 1. Simply: git pull
# 2. If issues (inconsistent changes) consider resetting (see below)

Reset Changes:
#1. Forget all changes made on this computer (since last push): ./git_reset.sh
#2. For more complex issues, solve manually (e.g. head location, reload older commits, etc)

Workflow:
With the above, you workflow should look like this:
# You setup on new computer, do the git_config
# You make a new repository, do the git_init
# You (often) save/load changes with the git_push and git pull
# Rarely solve inconsistencies with git_reset or manually 

Tips:
# If you want a repository to only save some content (e.g. exclude large files):
# use .gitignore files, or edit .git/info/exclude